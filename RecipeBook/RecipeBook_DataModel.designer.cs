#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RecipeBook
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RecipeBook")]
	public partial class RecipeBook_DataModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertIngredient(Ingredient instance);
    partial void UpdateIngredient(Ingredient instance);
    partial void DeleteIngredient(Ingredient instance);
    partial void InsertMeasurement(Measurement instance);
    partial void UpdateMeasurement(Measurement instance);
    partial void DeleteMeasurement(Measurement instance);
    partial void InsertRecipeIngredient(RecipeIngredient instance);
    partial void UpdateRecipeIngredient(RecipeIngredient instance);
    partial void DeleteRecipeIngredient(RecipeIngredient instance);
    partial void InsertRecipeCategory(RecipeCategory instance);
    partial void UpdateRecipeCategory(RecipeCategory instance);
    partial void DeleteRecipeCategory(RecipeCategory instance);
    partial void InsertRecipe(Recipe instance);
    partial void UpdateRecipe(Recipe instance);
    partial void DeleteRecipe(Recipe instance);
    #endregion
		
		public RecipeBook_DataModelDataContext() : 
				base(global::RecipeBook.Properties.Settings.Default.RecipeBookConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RecipeBook_DataModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RecipeBook_DataModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RecipeBook_DataModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RecipeBook_DataModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Ingredient> Ingredients
		{
			get
			{
				return this.GetTable<Ingredient>();
			}
		}
		
		public System.Data.Linq.Table<Measurement> Measurements
		{
			get
			{
				return this.GetTable<Measurement>();
			}
		}
		
		public System.Data.Linq.Table<RecipeIngredient> RecipeIngredients
		{
			get
			{
				return this.GetTable<RecipeIngredient>();
			}
		}
		
		public System.Data.Linq.Table<RecipeCategory> RecipeCategories
		{
			get
			{
				return this.GetTable<RecipeCategory>();
			}
		}
		
		public System.Data.Linq.Table<Recipe> Recipes
		{
			get
			{
				return this.GetTable<Recipe>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ingredients")]
	public partial class Ingredient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ing_ID;
		
		private string _ing_Name;
		
		private string _ing_Description;
		
		private EntitySet<RecipeIngredient> _RecipeIngredients;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oning_IDChanging(int value);
    partial void Oning_IDChanged();
    partial void Oning_NameChanging(string value);
    partial void Oning_NameChanged();
    partial void Oning_DescriptionChanging(string value);
    partial void Oning_DescriptionChanged();
    #endregion
		
		public Ingredient()
		{
			this._RecipeIngredients = new EntitySet<RecipeIngredient>(new Action<RecipeIngredient>(this.attach_RecipeIngredients), new Action<RecipeIngredient>(this.detach_RecipeIngredients));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ing_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ing_ID
		{
			get
			{
				return this._ing_ID;
			}
			set
			{
				if ((this._ing_ID != value))
				{
					this.Oning_IDChanging(value);
					this.SendPropertyChanging();
					this._ing_ID = value;
					this.SendPropertyChanged("ing_ID");
					this.Oning_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ing_Name", DbType="VarChar(30)")]
		public string ing_Name
		{
			get
			{
				return this._ing_Name;
			}
			set
			{
				if ((this._ing_Name != value))
				{
					this.Oning_NameChanging(value);
					this.SendPropertyChanging();
					this._ing_Name = value;
					this.SendPropertyChanged("ing_Name");
					this.Oning_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ing_Description", DbType="VarChar(200)")]
		public string ing_Description
		{
			get
			{
				return this._ing_Description;
			}
			set
			{
				if ((this._ing_Description != value))
				{
					this.Oning_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._ing_Description = value;
					this.SendPropertyChanged("ing_Description");
					this.Oning_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingredient_RecipeIngredient", Storage="_RecipeIngredients", ThisKey="ing_ID", OtherKey="ing_ID")]
		public EntitySet<RecipeIngredient> RecipeIngredients
		{
			get
			{
				return this._RecipeIngredients;
			}
			set
			{
				this._RecipeIngredients.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RecipeIngredients(RecipeIngredient entity)
		{
			this.SendPropertyChanging();
			entity.Ingredient = this;
		}
		
		private void detach_RecipeIngredients(RecipeIngredient entity)
		{
			this.SendPropertyChanging();
			entity.Ingredient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Measurements")]
	public partial class Measurement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _mes_ID;
		
		private string _mes_Name;
		
		private string _mes_Description;
		
		private System.Nullable<int> _mes_Type;
		
		private EntitySet<RecipeIngredient> _RecipeIngredients;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmes_IDChanging(int value);
    partial void Onmes_IDChanged();
    partial void Onmes_NameChanging(string value);
    partial void Onmes_NameChanged();
    partial void Onmes_DescriptionChanging(string value);
    partial void Onmes_DescriptionChanged();
    partial void Onmes_TypeChanging(System.Nullable<int> value);
    partial void Onmes_TypeChanged();
    #endregion
		
		public Measurement()
		{
			this._RecipeIngredients = new EntitySet<RecipeIngredient>(new Action<RecipeIngredient>(this.attach_RecipeIngredients), new Action<RecipeIngredient>(this.detach_RecipeIngredients));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mes_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int mes_ID
		{
			get
			{
				return this._mes_ID;
			}
			set
			{
				if ((this._mes_ID != value))
				{
					this.Onmes_IDChanging(value);
					this.SendPropertyChanging();
					this._mes_ID = value;
					this.SendPropertyChanged("mes_ID");
					this.Onmes_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mes_Name", DbType="VarChar(30)")]
		public string mes_Name
		{
			get
			{
				return this._mes_Name;
			}
			set
			{
				if ((this._mes_Name != value))
				{
					this.Onmes_NameChanging(value);
					this.SendPropertyChanging();
					this._mes_Name = value;
					this.SendPropertyChanged("mes_Name");
					this.Onmes_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mes_Description", DbType="VarChar(200)")]
		public string mes_Description
		{
			get
			{
				return this._mes_Description;
			}
			set
			{
				if ((this._mes_Description != value))
				{
					this.Onmes_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._mes_Description = value;
					this.SendPropertyChanged("mes_Description");
					this.Onmes_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mes_Type", DbType="Int")]
		public System.Nullable<int> mes_Type
		{
			get
			{
				return this._mes_Type;
			}
			set
			{
				if ((this._mes_Type != value))
				{
					this.Onmes_TypeChanging(value);
					this.SendPropertyChanging();
					this._mes_Type = value;
					this.SendPropertyChanged("mes_Type");
					this.Onmes_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Measurement_RecipeIngredient", Storage="_RecipeIngredients", ThisKey="mes_ID", OtherKey="mes_ID")]
		public EntitySet<RecipeIngredient> RecipeIngredients
		{
			get
			{
				return this._RecipeIngredients;
			}
			set
			{
				this._RecipeIngredients.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RecipeIngredients(RecipeIngredient entity)
		{
			this.SendPropertyChanging();
			entity.Measurement = this;
		}
		
		private void detach_RecipeIngredients(RecipeIngredient entity)
		{
			this.SendPropertyChanging();
			entity.Measurement = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecipeIngredients")]
	public partial class RecipeIngredient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ri_ID;
		
		private System.Nullable<int> _rec_ID;
		
		private System.Nullable<int> _ing_ID;
		
		private System.Nullable<int> _mes_ID;
		
		private System.Nullable<double> _ri_Amount;
		
		private EntityRef<Ingredient> _Ingredient;
		
		private EntityRef<Measurement> _Measurement;
		
		private EntityRef<Recipe> _Recipe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onri_IDChanging(int value);
    partial void Onri_IDChanged();
    partial void Onrec_IDChanging(System.Nullable<int> value);
    partial void Onrec_IDChanged();
    partial void Oning_IDChanging(System.Nullable<int> value);
    partial void Oning_IDChanged();
    partial void Onmes_IDChanging(System.Nullable<int> value);
    partial void Onmes_IDChanged();
    partial void Onri_AmountChanging(System.Nullable<double> value);
    partial void Onri_AmountChanged();
    #endregion
		
		public RecipeIngredient()
		{
			this._Ingredient = default(EntityRef<Ingredient>);
			this._Measurement = default(EntityRef<Measurement>);
			this._Recipe = default(EntityRef<Recipe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ri_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ri_ID
		{
			get
			{
				return this._ri_ID;
			}
			set
			{
				if ((this._ri_ID != value))
				{
					this.Onri_IDChanging(value);
					this.SendPropertyChanging();
					this._ri_ID = value;
					this.SendPropertyChanged("ri_ID");
					this.Onri_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rec_ID", DbType="Int")]
		public System.Nullable<int> rec_ID
		{
			get
			{
				return this._rec_ID;
			}
			set
			{
				if ((this._rec_ID != value))
				{
					if (this._Recipe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrec_IDChanging(value);
					this.SendPropertyChanging();
					this._rec_ID = value;
					this.SendPropertyChanged("rec_ID");
					this.Onrec_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ing_ID", DbType="Int")]
		public System.Nullable<int> ing_ID
		{
			get
			{
				return this._ing_ID;
			}
			set
			{
				if ((this._ing_ID != value))
				{
					if (this._Ingredient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oning_IDChanging(value);
					this.SendPropertyChanging();
					this._ing_ID = value;
					this.SendPropertyChanged("ing_ID");
					this.Oning_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mes_ID", DbType="Int")]
		public System.Nullable<int> mes_ID
		{
			get
			{
				return this._mes_ID;
			}
			set
			{
				if ((this._mes_ID != value))
				{
					if (this._Measurement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmes_IDChanging(value);
					this.SendPropertyChanging();
					this._mes_ID = value;
					this.SendPropertyChanged("mes_ID");
					this.Onmes_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ri_Amount", DbType="Float")]
		public System.Nullable<double> ri_Amount
		{
			get
			{
				return this._ri_Amount;
			}
			set
			{
				if ((this._ri_Amount != value))
				{
					this.Onri_AmountChanging(value);
					this.SendPropertyChanging();
					this._ri_Amount = value;
					this.SendPropertyChanged("ri_Amount");
					this.Onri_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingredient_RecipeIngredient", Storage="_Ingredient", ThisKey="ing_ID", OtherKey="ing_ID", IsForeignKey=true)]
		public Ingredient Ingredient
		{
			get
			{
				return this._Ingredient.Entity;
			}
			set
			{
				Ingredient previousValue = this._Ingredient.Entity;
				if (((previousValue != value) 
							|| (this._Ingredient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ingredient.Entity = null;
						previousValue.RecipeIngredients.Remove(this);
					}
					this._Ingredient.Entity = value;
					if ((value != null))
					{
						value.RecipeIngredients.Add(this);
						this._ing_ID = value.ing_ID;
					}
					else
					{
						this._ing_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ingredient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Measurement_RecipeIngredient", Storage="_Measurement", ThisKey="mes_ID", OtherKey="mes_ID", IsForeignKey=true)]
		public Measurement Measurement
		{
			get
			{
				return this._Measurement.Entity;
			}
			set
			{
				Measurement previousValue = this._Measurement.Entity;
				if (((previousValue != value) 
							|| (this._Measurement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Measurement.Entity = null;
						previousValue.RecipeIngredients.Remove(this);
					}
					this._Measurement.Entity = value;
					if ((value != null))
					{
						value.RecipeIngredients.Add(this);
						this._mes_ID = value.mes_ID;
					}
					else
					{
						this._mes_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Measurement");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recipe_RecipeIngredient", Storage="_Recipe", ThisKey="rec_ID", OtherKey="rec_ID", IsForeignKey=true)]
		public Recipe Recipe
		{
			get
			{
				return this._Recipe.Entity;
			}
			set
			{
				Recipe previousValue = this._Recipe.Entity;
				if (((previousValue != value) 
							|| (this._Recipe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Recipe.Entity = null;
						previousValue.RecipeIngredients.Remove(this);
					}
					this._Recipe.Entity = value;
					if ((value != null))
					{
						value.RecipeIngredients.Add(this);
						this._rec_ID = value.rec_ID;
					}
					else
					{
						this._rec_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Recipe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecipeCategories")]
	public partial class RecipeCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cat_ID;
		
		private string _cat_Name;
		
		private string _cat_Description;
		
		private EntitySet<Recipe> _Recipes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncat_IDChanging(int value);
    partial void Oncat_IDChanged();
    partial void Oncat_NameChanging(string value);
    partial void Oncat_NameChanged();
    partial void Oncat_DescriptionChanging(string value);
    partial void Oncat_DescriptionChanged();
    #endregion
		
		public RecipeCategory()
		{
			this._Recipes = new EntitySet<Recipe>(new Action<Recipe>(this.attach_Recipes), new Action<Recipe>(this.detach_Recipes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cat_ID
		{
			get
			{
				return this._cat_ID;
			}
			set
			{
				if ((this._cat_ID != value))
				{
					this.Oncat_IDChanging(value);
					this.SendPropertyChanging();
					this._cat_ID = value;
					this.SendPropertyChanged("cat_ID");
					this.Oncat_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_Name", DbType="VarChar(30)")]
		public string cat_Name
		{
			get
			{
				return this._cat_Name;
			}
			set
			{
				if ((this._cat_Name != value))
				{
					this.Oncat_NameChanging(value);
					this.SendPropertyChanging();
					this._cat_Name = value;
					this.SendPropertyChanged("cat_Name");
					this.Oncat_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_Description", DbType="VarChar(200)")]
		public string cat_Description
		{
			get
			{
				return this._cat_Description;
			}
			set
			{
				if ((this._cat_Description != value))
				{
					this.Oncat_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._cat_Description = value;
					this.SendPropertyChanged("cat_Description");
					this.Oncat_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecipeCategory_Recipe", Storage="_Recipes", ThisKey="cat_ID", OtherKey="cat_ID")]
		public EntitySet<Recipe> Recipes
		{
			get
			{
				return this._Recipes;
			}
			set
			{
				this._Recipes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Recipes(Recipe entity)
		{
			this.SendPropertyChanging();
			entity.RecipeCategory = this;
		}
		
		private void detach_Recipes(Recipe entity)
		{
			this.SendPropertyChanging();
			entity.RecipeCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Recipes")]
	public partial class Recipe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _rec_ID;
		
		private string _rec_Name;
		
		private string _rec_Description;
		
		private string _rec_Source;
		
		private string _rec_PreparationInstructions;
		
		private string _rec_CookingInstructions;
		
		private System.Nullable<System.DateTime> _rec_EntryDate;
		
		private System.Nullable<int> _cat_ID;
		
		private EntitySet<RecipeIngredient> _RecipeIngredients;
		
		private EntityRef<RecipeCategory> _RecipeCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrec_IDChanging(int value);
    partial void Onrec_IDChanged();
    partial void Onrec_NameChanging(string value);
    partial void Onrec_NameChanged();
    partial void Onrec_DescriptionChanging(string value);
    partial void Onrec_DescriptionChanged();
    partial void Onrec_SourceChanging(string value);
    partial void Onrec_SourceChanged();
    partial void Onrec_PreparationInstructionsChanging(string value);
    partial void Onrec_PreparationInstructionsChanged();
    partial void Onrec_CookingInstructionsChanging(string value);
    partial void Onrec_CookingInstructionsChanged();
    partial void Onrec_EntryDateChanging(System.Nullable<System.DateTime> value);
    partial void Onrec_EntryDateChanged();
    partial void Oncat_IDChanging(System.Nullable<int> value);
    partial void Oncat_IDChanged();
    #endregion
		
		public Recipe()
		{
			this._RecipeIngredients = new EntitySet<RecipeIngredient>(new Action<RecipeIngredient>(this.attach_RecipeIngredients), new Action<RecipeIngredient>(this.detach_RecipeIngredients));
			this._RecipeCategory = default(EntityRef<RecipeCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rec_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int rec_ID
		{
			get
			{
				return this._rec_ID;
			}
			set
			{
				if ((this._rec_ID != value))
				{
					this.Onrec_IDChanging(value);
					this.SendPropertyChanging();
					this._rec_ID = value;
					this.SendPropertyChanged("rec_ID");
					this.Onrec_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rec_Name", DbType="VarChar(100)")]
		public string rec_Name
		{
			get
			{
				return this._rec_Name;
			}
			set
			{
				if ((this._rec_Name != value))
				{
					this.Onrec_NameChanging(value);
					this.SendPropertyChanging();
					this._rec_Name = value;
					this.SendPropertyChanged("rec_Name");
					this.Onrec_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rec_Description", DbType="VarChar(200)")]
		public string rec_Description
		{
			get
			{
				return this._rec_Description;
			}
			set
			{
				if ((this._rec_Description != value))
				{
					this.Onrec_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._rec_Description = value;
					this.SendPropertyChanged("rec_Description");
					this.Onrec_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rec_Source", DbType="VarChar(60)")]
		public string rec_Source
		{
			get
			{
				return this._rec_Source;
			}
			set
			{
				if ((this._rec_Source != value))
				{
					this.Onrec_SourceChanging(value);
					this.SendPropertyChanging();
					this._rec_Source = value;
					this.SendPropertyChanged("rec_Source");
					this.Onrec_SourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rec_PreparationInstructions", DbType="VarChar(500)")]
		public string rec_PreparationInstructions
		{
			get
			{
				return this._rec_PreparationInstructions;
			}
			set
			{
				if ((this._rec_PreparationInstructions != value))
				{
					this.Onrec_PreparationInstructionsChanging(value);
					this.SendPropertyChanging();
					this._rec_PreparationInstructions = value;
					this.SendPropertyChanged("rec_PreparationInstructions");
					this.Onrec_PreparationInstructionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rec_CookingInstructions", DbType="VarChar(500)")]
		public string rec_CookingInstructions
		{
			get
			{
				return this._rec_CookingInstructions;
			}
			set
			{
				if ((this._rec_CookingInstructions != value))
				{
					this.Onrec_CookingInstructionsChanging(value);
					this.SendPropertyChanging();
					this._rec_CookingInstructions = value;
					this.SendPropertyChanged("rec_CookingInstructions");
					this.Onrec_CookingInstructionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rec_EntryDate", DbType="Date")]
		public System.Nullable<System.DateTime> rec_EntryDate
		{
			get
			{
				return this._rec_EntryDate;
			}
			set
			{
				if ((this._rec_EntryDate != value))
				{
					this.Onrec_EntryDateChanging(value);
					this.SendPropertyChanging();
					this._rec_EntryDate = value;
					this.SendPropertyChanged("rec_EntryDate");
					this.Onrec_EntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_ID", DbType="Int")]
		public System.Nullable<int> cat_ID
		{
			get
			{
				return this._cat_ID;
			}
			set
			{
				if ((this._cat_ID != value))
				{
					if (this._RecipeCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncat_IDChanging(value);
					this.SendPropertyChanging();
					this._cat_ID = value;
					this.SendPropertyChanged("cat_ID");
					this.Oncat_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recipe_RecipeIngredient", Storage="_RecipeIngredients", ThisKey="rec_ID", OtherKey="rec_ID")]
		public EntitySet<RecipeIngredient> RecipeIngredients
		{
			get
			{
				return this._RecipeIngredients;
			}
			set
			{
				this._RecipeIngredients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecipeCategory_Recipe", Storage="_RecipeCategory", ThisKey="cat_ID", OtherKey="cat_ID", IsForeignKey=true)]
		public RecipeCategory RecipeCategory
		{
			get
			{
				return this._RecipeCategory.Entity;
			}
			set
			{
				RecipeCategory previousValue = this._RecipeCategory.Entity;
				if (((previousValue != value) 
							|| (this._RecipeCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RecipeCategory.Entity = null;
						previousValue.Recipes.Remove(this);
					}
					this._RecipeCategory.Entity = value;
					if ((value != null))
					{
						value.Recipes.Add(this);
						this._cat_ID = value.cat_ID;
					}
					else
					{
						this._cat_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RecipeCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RecipeIngredients(RecipeIngredient entity)
		{
			this.SendPropertyChanging();
			entity.Recipe = this;
		}
		
		private void detach_RecipeIngredients(RecipeIngredient entity)
		{
			this.SendPropertyChanging();
			entity.Recipe = null;
		}
	}
}
#pragma warning restore 1591
